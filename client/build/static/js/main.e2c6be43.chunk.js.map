{"version":3,"sources":["reportWebVitals.js","components/Clock.js","pages/Home.js","styles/leaderBoard.gif","pages/Leaderboard.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","clock","props","state","time","Date","clockOn","setInterval","tick","clearInterval","this","setState","toLocaleTimeString","Component","Home","useStateIfMounted","spleefNumber","setSpleefNumber","lastSpleef","setLastSpleef","id","setId","loaded","setLoaded","navigate","useNavigate","recolorizeButton","button","classList","add","setTimeout","remove","fecthSpleef","axios","get","res","date","data","number","toLocaleDateString","year","month","day","hour","minute","_id","catch","handleRestart","a","document","getElementById","delete","style","display","handleFirstSpleef","post","handleOtherSpleefs","put","leaderboardButton","useEffect","className","Clock","onClick","type","library","fas","Leaderboard","currentNumber","setCurrentNumber","currentDate","setCurrentDate","lastDayId","setLastDayId","bests","setBests","dateParser","fetchBests","handleSave","handleReSave","handleDel","length","slice","includes","Dropdown","Toggle","variant","icon","Menu","Item","src","spinner","alt","map","best","ReactDOM","render","path","index","element"],"mappings":"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","file":"static/js/main.e2c6be43.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React, { Component, } from 'react';\r\n\r\n\r\n\r\nclass clock extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            time: new Date(),\r\n            clockOn: setInterval(\r\n                () => this.tick(),\r\n                1000\r\n            )\r\n        };\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.state.clockOn)\r\n    }\r\n\r\n\r\n    tick() {\r\n        this.setState({\r\n            time: new Date()\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h2>{this.state.time.toLocaleTimeString()}</h2>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default clock;","import axios from 'axios';\r\nimport { useEffect } from 'react'\r\nimport Clock from '../components/Clock'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useStateIfMounted } from 'use-state-if-mounted';\r\n\r\nfunction Home() {\r\n    const [spleefNumber, setSpleefNumber] = useStateIfMounted()\r\n    const [lastSpleef, setLastSpleef] = useStateIfMounted()\r\n    const [id, setId] = useStateIfMounted()\r\n    const [loaded, setLoaded] = useStateIfMounted(false)\r\n    let navigate = useNavigate();\r\n\r\n\r\n\r\n    const dateParser = (date) => {\r\n        let newDate = new Date(date).toLocaleDateString(\"fr-FR\", {\r\n            year: \"numeric\",\r\n            month: \"numeric\",\r\n            day: \"numeric\",\r\n            hour: \"numeric\",\r\n            minute: \"numeric\",\r\n        });\r\n        return newDate;\r\n    };\r\n\r\n\r\n\r\n    const recolorizeButton = (button) => {\r\n        button.classList.add('selectedBtn')\r\n        setTimeout(() => {\r\n            button.classList.remove('selectedBtn')\r\n        }, 300)\r\n    }\r\n\r\n\r\n    const fecthSpleef =  () => {\r\n        setTimeout(() => {\r\n         axios.get('/api/number')\r\n            .then(res => {\r\n                    setSpleefNumber(res.data[0].number);\r\n                    setLastSpleef(dateParser(res.data[0].lastSpleef))\r\n                    setId(res.data[0]._id)\r\n                    setLoaded(true)\r\n                })\r\n                .catch(() => {\r\n                    setSpleefNumber(0)\r\n                    setId(\"\")\r\n                    setLastSpleef(\"\")\r\n                    setLoaded(true)\r\n                })\r\n            }, 500)\r\n\r\n    }\r\n\r\n    const handleRestart = async () => {\r\n        recolorizeButton(document.getElementById('restart'))\r\n        await axios.delete('/api/reset')\r\n        document.getElementById('firstSpleef').style.display = \"flex\"\r\n        document.getElementById('otherSpleefs').style.display = \"none\"\r\n        setSpleefNumber(0)\r\n    }\r\n\r\n    const handleFirstSpleef = async () => {\r\n        recolorizeButton(document.getElementById('firstSpleef'))\r\n        await axios.post('/api/spleef').then(() => {\r\n            document.getElementById('firstSpleef').style.display = \"none\"\r\n            document.getElementById('otherSpleefs').style.display = \"flex\"\r\n            fecthSpleef()\r\n        })\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    const handleOtherSpleefs = async () => {\r\n        recolorizeButton(document.getElementById('otherSpleefs'))\r\n        const data = {\r\n            number: spleefNumber + 1,\r\n            lastSpleef: new Date()\r\n        }\r\n        await axios.put(`/api/spleef/${id}`, data)\r\n        fecthSpleef()\r\n    }\r\n\r\n\r\n    const leaderboardButton = async () => {\r\n        recolorizeButton(document.getElementById('leaderboardButton'))\r\n        setTimeout(() => {\r\n            navigate(\"/leaderboard\")\r\n        }, 100)\r\n    }\r\n\r\n    useEffect(() => {\r\n            fecthSpleef()\r\n            if(spleefNumber === 0 ){\r\n                setTimeout(()=>{\r\n                    setLoaded(true)\r\n                },500)\r\n            }\r\n            if(loaded){\r\n\r\n                if (spleefNumber !== 0) {\r\n                    document.getElementById('firstSpleef').style.display = \"none\"\r\n                    document.getElementById('otherSpleefs').style.display = \"flex\"\r\n                } else {\r\n                    document.getElementById('firstSpleef').style.display = \"flex\"\r\n                    document.getElementById('otherSpleefs').style.display = \"none\"\r\n                }\r\n            }\r\n    })\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <div id=\"app\">\r\n                <div className=\"drugBox\">\r\n                    <h1>How many joints ?</h1>\r\n                    {spleefNumber || spleefNumber === 0 ? \r\n                    <div className='dataZone'>\r\n                    <p className=\"spleefNumber\">\r\n                        {spleefNumber}\r\n                    </p>\r\n                    <p>\r\n                        {lastSpleef && (\r\n                            `Last joint on the : ${lastSpleef}`\r\n                            )}\r\n                    </p>\r\n                    <Clock />\r\n                    </div>\r\n                :<div id=\"homeLoader\" />}\r\n                {loaded ? \r\n                    <div id=\"btnBlock\">\r\n                        <div className=\"btn\" id=\"firstSpleef\" onClick={handleFirstSpleef} type=\"submit\">Smoke</div>\r\n                        <div className=\"btn\" style={{ display: \"none\" }} id=\"otherSpleefs\" onClick={handleOtherSpleefs} type=\"submit\">Smoke</div>\r\n                        <div className=\"btn\" id=\"restart\" onClick={handleRestart}>Restart</div>\r\n                    </div>\r\n                    :\"\"}\r\n                    <div className=\"btn\" id=\"leaderboardButton\" onClick={leaderboardButton}>\r\n                        Leaderboard\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/leaderBoard.9fd4c87c.gif\";","import axios from 'axios';\r\nimport React, { useEffect } from 'react';\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useStateIfMounted } from 'use-state-if-mounted';\r\nimport spinner from '../styles/leaderBoard.gif'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { library } from '@fortawesome/fontawesome-svg-core'\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'\r\n// import $ from 'jquery'\r\nimport { Dropdown } from 'react-bootstrap';\r\n\r\nlibrary.add(fas)\r\n\r\n\r\nconst Leaderboard = () => {\r\n    let navigate = useNavigate()\r\n\r\n    const [currentNumber, setCurrentNumber] = useStateIfMounted()\r\n    const [currentDate, setCurrentDate] = useStateIfMounted()\r\n    const [lastDayId, setLastDayId] = useStateIfMounted()\r\n    const [bests, setBests] = useStateIfMounted([])\r\n    const [loaded, setLoaded] = useStateIfMounted(false)\r\n\r\n\r\n\r\n    const dateParser = (date) => {\r\n        let newDate = new Date(date).toLocaleDateString(\"fr-FR\", {\r\n            year: \"numeric\",\r\n            month: \"numeric\",\r\n            day: \"numeric\",\r\n        });\r\n        return newDate;\r\n    };\r\n\r\n\r\n    const fetchJoints = () => {\r\n        axios.get('api/number/')\r\n            .then(res => {\r\n                setCurrentNumber(res.data[0].number)\r\n                setCurrentDate(new Date())\r\n            })\r\n            .catch(res => {\r\n                setCurrentNumber(0)\r\n                setCurrentDate(new Date())\r\n            })\r\n    }\r\n\r\n    const fetchBests = () => {\r\n        axios.get('/api/leaderboard')\r\n            .then((res) => {\r\n                setBests(res.data)\r\n                setLoaded(true)\r\n            })\r\n    }\r\n\r\n    const recolorizeButton = (button) => {\r\n        button.classList.add('selectedBtn')\r\n        setTimeout(() => {\r\n            button.classList.remove('selectedBtn')\r\n        }, 300)\r\n    }\r\n\r\n    const handleBack = () => {\r\n        recolorizeButton(document.getElementById('backButton'))\r\n        setTimeout(() => {\r\n            navigate(\"/\")\r\n        }, 100)\r\n    }\r\n\r\n    const handleSave = async () => {\r\n        recolorizeButton(document.getElementById('saveButton'))\r\n        const data = {\r\n            number: currentNumber,\r\n            date: currentDate\r\n        }\r\n        await axios.post('/api/leaderboard', data).then(() => {\r\n            fetchBests()\r\n        })\r\n    }\r\n\r\n    const handleReSave = async () => {\r\n        recolorizeButton(document.getElementById('resaveButton'))\r\n        const data = await {\r\n            number: currentNumber,\r\n        }\r\n        axios.put('/api/leaderboard/' + lastDayId, data).then(() => {\r\n            fetchBests()\r\n            setTimeout(() => {\r\n                document.getElementById(\"resaveButton\").style.display = \"none\"\r\n            }, 300)\r\n        })\r\n    }\r\n\r\n\r\n    const handleDel = async () => {\r\n        await axios.delete('/api/leaderboard').then(() => {\r\n            fetchBests()\r\n            setTimeout(() => {\r\n                document.getElementById(\"resaveButton\").style.display = \"none\"\r\n                document.getElementById(\"resetLeaderboard\").style.display = \"none\"\r\n                document.getElementById('saveButton').style.display = \"flex\"\r\n            }, 450)\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n    useEffect(() => {\r\n        if (!loaded) {\r\n            fetchJoints()\r\n            fetchBests()\r\n        }\r\n\r\n\r\n        if (bests.length !== 0 && loaded) {\r\n            document.getElementById(\"leaderboardSettings\").style.display = \"flex\"\r\n            if (dateParser(bests.slice(-1)[0].date).includes(dateParser(new Date()))) {\r\n                document.getElementById('saveButton').style.display = \"none\"\r\n                if (bests.slice(-1)[0].number < currentNumber) {\r\n                    document.getElementById(\"resaveButton\").style.display = \"flex\"\r\n                    setLastDayId(bests.slice(-1)[0]._id)\r\n                }\r\n            }\r\n        } else if (bests.length === 0 && loaded){\r\n            document.getElementById(\"leaderboardSettings\").style.display = \"none\"\r\n        }\r\n    })\r\n\r\n\r\n\r\n    return (\r\n        <div id=\"leaderboard\">\r\n            <div className=\"leaderBox\">\r\n                {loaded && (\r\n                    <div id=\"leaderboardSettings\">\r\n\r\n                    <Dropdown >\r\n                    <Dropdown.Toggle variant=\"secondary\" id=\"dropdown-basic\">\r\n                        <FontAwesomeIcon icon=\"fa-solid fa-gear\"  />\r\n                    </Dropdown.Toggle>\r\n                    <Dropdown.Menu>\r\n                            <Dropdown.Item onClick={handleDel} id=\"resetLeaderboard\">Reset leaderboard</Dropdown.Item>\r\n                    </Dropdown.Menu>\r\n                </Dropdown>\r\n                        </div>\r\n                        )}\r\n                {loaded ?\r\n                    <h2>Leaderboard</h2>\r\n                    : <div ><img src={spinner} alt=\"loader\" /></div>}\r\n                <ul>\r\n                    {bests && (\r\n                        bests.map((best) => {\r\n                            return <li key={best._id}>{best.number} joints on the {dateParser(best.date)}</li>\r\n                        })\r\n                    )}\r\n                </ul>\r\n                {loaded ?\r\n                    <div className=\"leaderboardButtons\">\r\n                        <div onClick={handleBack} className=\"btn\" id=\"backButton\">Back</div>\r\n                        <div onClick={handleSave} className=\"btn\" id=\"saveButton\">Save</div>\r\n                        <div onClick={handleReSave} className=\"btn\" id=\"resaveButton\">Save</div>\r\n                    </div>\r\n                    : \"\"}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Leaderboard;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Home from './pages/Home';\r\nimport './styles/style.scss'\r\nimport {\r\n  BrowserRouter,\r\n  Routes,\r\n  Route\r\n} from \"react-router-dom\";\r\nimport Leaderboard from './pages/Leaderboard';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Routes>\r\n        <Route path=\"/*\" index element={<Home />} />\r\n        <Route path=\"/leaderboard\" index element={<Leaderboard />} />\r\n    </Routes>\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}